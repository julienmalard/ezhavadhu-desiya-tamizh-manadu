import os

import matplotlib
import numpy as np
import pandas as pd
from matplotlib import pyplot as plt
from tikon.móds.rae.utils import EJE_ETAPA
from tikon.utils import EJE_TIEMPO, EJE_ESTOC, EJE_PARÁMS, EJE_PARC
from எண்ணிக்கை import உரைக்கு as உ

from உருவகப்படுத்துதல்கள் import பொ_சே_கோ, அடிப்படை_உருவகப்படுத்துதல், \
    உயிர்கட்டுப்பாடு_குடம்பி_எளிய_உருவகப்படுத்துதல், உயிர்கட்டுப்பாடு_கூட்டுப்புழு_எளிய_உருவகப்படுத்துதல், \
    முட்டை_தவிர_பூச்சிக்கொல்லி_எளிய_உருவகப்படுத்துதல், முதல்_தேதி
from எழுத்துரு import எழுத்துரு, அளவுடன்_எழுத்துரு
from மாதிரி import வயில்_அ

"""
கட்டுரையில் உள்ள அனைத்து பகுப்பாய்வுகளை இணைக்கிறதற்கு கீழ்கண்ட குறியீடு பொறுப்பானது
"""

உருப்படம்_கோப்புரை = 'வெளியீடு/உருப்படங்கள்'
இணையானது = False

உருவகப்படுத்துதல்_பரிமாணம் = [EJE_ESTOC, EJE_PARÁMS]


def தமிழ்_அச்சுகள்(_அச்சு):
    _அச்சு.set_xticklabels(_அச்சு.get_xticks(), fontproperties=எழுத்துரு)
    _அச்சு.set_yticklabels(_அச்சு.get_yticks(), fontproperties=எழுத்துரு)
    _அச்சு.get_xaxis().set_major_formatter(
        matplotlib.ticker.FuncFormatter(lambda x, p: உ(int(x), 'தமிழ்'))
    )
    _அச்சு.get_yaxis().set_major_formatter(
        matplotlib.ticker.FuncFormatter(lambda x, p: உ(int(x), 'தமிழ்'))
    )


def பூச்சி_எண்ணிக்கையை_வரையு(அச்சு, படிகள்):
    கண்டறியது = வயில்_அ.datos.obt_obs('red', var='Pobs')[0].datos.copy()
    கண்டறியது.coords[EJE_ETAPA] = [str(y) for y in கண்டறியது.coords[EJE_ETAPA].values]

    நாள் = கண்டறியது[EJE_TIEMPO]
    பூச்சி_எண்ணிக்கை = கண்டறியது.loc[{EJE_ETAPA: படிகள்}].squeeze(EJE_PARC)
    if isinstance(படிகள், list):
        பூச்சி_எண்ணிக்கை = பூச்சி_எண்ணிக்கை.sum(dim=EJE_ETAPA)

    அச்சு.plot(நாள், பூச்சி_எண்ணிக்கை, color='#000000', marker='o', markersize=3, label='கண்டறியப்பட்ட தரவுகள்')


def நம்பக_இடைவெளியுடன்_எண்ணிக்கையை_வரையு(அச்சு_, விளைவு_, வரம்புகள்=None, நிழல்=False, பின்='', நாள்=None):
    """
    நம்பக இடைவெளிகளுடன் பூச்சி எண்ணிக்கையை வரையும்.
    """

    நிறம் = '#99CC00'

    if நாள்:
        விளைவு_ = விளைவு_[{EJE_TIEMPO: நாள்}]

    # கண்ணிப்பின் இடைநிலையளவை வரையு
    x_ = _நாட்களை_பெறு(விளைவு_)
    இடைநிலையளவு_வடிவூட்டம் = {'lw': 1, 'linestyle': '--', 'color': '#000000'} if நிழல் else {'lw': 2, 'color': நிறம்}
    அச்சு_.plot(x_, விளைவு_.median(dim=உருவகப்படுத்துதல்_பரிமாணம்), **இடைநிலையளவு_வடிவூட்டம்,
                label='இடைநிலையளவு' + பின்)

    # வேண்டிய வரம்புகள்
    வரம்புகள் = வரம்புகள் or [.50, .75, .95]

    # முன் வரம்பின் அதிகப்பட்சமும் குறைந்தப்பட்சமும்
    முன்_அதிகப்பட்ச_வரம்பு = முன்_குறைந்தப்பட்ச_வரம்பு = விளைவு_.median(dim=உருவகப்படுத்துதல்_பரிமாணம்)

    # ஒவ்வோரு வரம்புக்கு...
    for இ, வ in enumerate(வரம்புகள்):

        # தரவுகளின் அதிகப்பட்ச மற்றும் குறைந்தப்பட்ச விழுக்காடுகள்
        அதிக_விழுக்காடு = விளைவு_.quantile(0.50 + வ / 2, dim=உருவகப்படுத்துதல்_பரிமாணம்)
        குறைந்த_விழுக்காடு = விளைவு_.quantile((1 - வ) / 2, dim=உருவகப்படுத்துதல்_பரிமாணம்)

        வழிக்காடு = int(வ * 100)
        if நிழல்:
            அச்சு_.plot(x_, அதிக_விழுக்காடு, lw=1, linestyle=':', color='#000000',
                        label='{} % ந. இடை.'.format(உ(வழிக்காடு, "தமிழ்")) + பின்)
            அச்சு_.plot(x_, குறைந்த_விழுக்காடு, lw=1, linestyle=':', color='#000000')
        else:
            # ஒலிபுகாநிலையை
            அதிக_ஒலிபுகாநிலை = 0.6
            குறைந்த_ஒலிபுகாநிலை = 0.2
            ஒலிபுகாநிலை = (1 - இ / (len(வரம்புகள்) - 1)) * (அதிக_ஒலிபுகாநிலை - குறைந்த_ஒலிபுகாநிலை) + குறைந்த_ஒலிபுகாநிலை

            அச்சு_.fill_between(
                x_, முன்_அதிகப்பட்ச_வரம்பு, அதிக_விழுக்காடு,
                facecolor=நிறம், alpha=ஒலிபுகாநிலை, linewidth=0.5, edgecolor=நிறம்,
                label='{} % ந. இடை.'.format(உ(வழிக்காடு, "தமிழ்")) + பின்
            )
            அச்சு_.fill_between(
                x_, குறைந்த_விழுக்காடு, முன்_குறைந்தப்பட்ச_வரம்பு,
                facecolor=நிறம், alpha=ஒலிபுகாநிலை, linewidth=0.5, edgecolor=நிறம்
            )

            # அடுத்த வரம்புக்காக குறைந்தப்பட்ச மற்றும் அதிகப்பட்ச வரம்புகளை சேமிக்கவும்
            முன்_குறைந்தப்பட்ச_வரம்பு = குறைந்த_விழுக்காடு
            முன்_அதிகப்பட்ச_வரம்பு = அதிக_விழுக்காடு


def _நாட்களை_பெறு(m):
    return pd.Series(pd.to_datetime(m[EJE_TIEMPO].values) - pd.to_datetime(முதல்_தேதி)).dt.days.values


if __name__ == '__main__':
    அடிப்படை_தரவுகள் = அடிப்படை_உருவகப்படுத்துதல்.தகவல்களை_பெறு().squeeze(EJE_PARC)  # We only have 1 field anyways
    அடிப்படை_குடம்பி = அடிப்படை_தரவுகள்.loc[{EJE_ETAPA: 'அனைத்து குடம்பி'}]
    அடிப்படை_கூட்டுப்புழு = அடிப்படை_தரவுகள்.loc[{EJE_ETAPA: 'O. arenosella : pupa'}]
    அடிப்படை_குடம்பி_ஒட்டுண்ணி = அடிப்படை_தரவுகள்.loc[{EJE_ETAPA: 'Parasitoide pupa : juvenil'}]
    அடிப்படை_கூட்டுப்பிழு_ஒட்டுண்ணி = அடிப்படை_தரவுகள்.loc[{EJE_ETAPA: 'Parasitoide larvas : juvenil'}]

    if not os.path.isdir(உருப்படம்_கோப்புரை):
        os.makedirs(உருப்படம்_கோப்புரை)

    # உருப்படம் ௨
    உருப்படம் = plt.figure(figsize=(12, 10))
    (அச்சு_௧, அச்சு_௨), (அச்சு_௩, அச்சு_௪) = உருப்படம்.subplots(ncols=2, nrows=2, sharex='all')

    நம்பக_இடைவெளியுடன்_எண்ணிக்கையை_வரையு(அச்சு_௧, அடிப்படை_குடம்பி, நாள்=slice(0, 300))
    நம்பக_இடைவெளியுடன்_எண்ணிக்கையை_வரையு(அச்சு_௨, அடிப்படை_கூட்டுப்புழு, நாள்=slice(0, 300))
    நம்பக_இடைவெளியுடன்_எண்ணிக்கையை_வரையு(அச்சு_௩, அடிப்படை_கூட்டுப்பிழு_ஒட்டுண்ணி, நாள்=slice(0, 300))
    நம்பக_இடைவெளியுடன்_எண்ணிக்கையை_வரையு(அச்சு_௪, அடிப்படை_குடம்பி_ஒட்டுண்ணி, நாள்=slice(0, 300))

    பூச்சி_எண்ணிக்கையை_வரையு(அச்சு_௧, படிகள்=[f'O. arenosella : juvenil {i}' for i in range(1, 6)])
    பூச்சி_எண்ணிக்கையை_வரையு(அச்சு_௨, படிகள்='O. arenosella : pupa')
    பூச்சி_எண்ணிக்கையை_வரையு(அச்சு_௩, படிகள்='Parasitoide larvas : juvenil')
    பூச்சி_எண்ணிக்கையை_வரையு(அச்சு_௪, படிகள்='Parasitoide pupa : juvenil')

    அச்சு_௧.set_title('தென்னைக் கருந்தலைப்புழு குடம்பி', fontsize=15, fontproperties=எழுத்துரு)
    அச்சு_௨.set_title('தென்னைக் கருந்தலைப்புழு கூட்டுப்புழு', fontsize=15, fontproperties=எழுத்துரு)
    அச்சு_௩.set_title('குடம்பி ஒட்டுண்ணியின் குடம்பி', fontsize=15, fontproperties=எழுத்துரு)
    அச்சு_௪.set_title('கூட்டுப்புழு ஒட்டுண்ணியி்ன் குடம்பி', fontsize=15, fontproperties=எழுத்துரு)

    அச்சு_௩.set_xlabel('நாட்கள்', fontsize=15, fontproperties=எழுத்துரு)
    அச்சு_௪.set_xlabel('நாட்கள்', fontsize=15, fontproperties=எழுத்துரு)

    for அச்சு in [அச்சு_௧, அச்சு_௨, அச்சு_௩, அச்சு_௪]:
        தமிழ்_அச்சுகள்(அச்சு)

    உருப்படம்.autofmt_xdate(rotation=25)
    உருப்படம்.legend(
        *அச்சு_௧.get_legend_handles_labels(), loc='lower center', ncol=3, fontsize=15, prop=எழுத்துரு
    )
    உருப்படம்.subplots_adjust(bottom=0.2, wspace=0.20)
    உருப்படம்.savefig(f'{உருப்படம்_கோப்புரை}/உருப்படம் - ௨.jpeg')

    # உருப்படம் ௩
    சேர்க்க_வேண்டியது = {
        'பூச்சிக்கொல்லி (முட்டை தவிர)': முட்டை_தவிர_பூச்சிக்கொல்லி_எளிய_உருவகப்படுத்துதல்,
        'கூட்டுப்புழு ஒட்டுண்ணியால் உயிர் கட்டு்ப்பாடு': உயிர்கட்டுப்பாடு_கூட்டுப்புழு_எளிய_உருவகப்படுத்துதல்,
        'குடம்பி ஒட்டுண்ணியால் உயிர் கட்டு்ப்பாடு': உயிர்கட்டுப்பாடு_குடம்பி_எளிய_உருவகப்படுத்துதல்,
    }
    தரவுகள் = {
        சாபி: ம.தகவல்களை_பெறு().squeeze(EJE_PARC) for சாபி, ம in சேர்க்க_வேண்டியது.items()
    }

    உருப்படம் = plt.figure(figsize=(6 * 3, 4 * 3))
    (அச்சு_௧, அச்சு_௨), (அச்சு_௩, அச்சு_௪) = உருப்படம்.subplots(ncols=2, nrows=2, sharey='all', sharex='all')
    அச்சுகள் = [அச்சு_௧, அச்சு_௨, அச்சு_௩, அச்சு_௪]

    எண்ணிக்கைகள் = {
        'கட்டுபாடு இல்லாமல்': {
            'குடம்பிகள்': அடிப்படை_குடம்பி,
            'கூட்டுப்புழுகள்': அடிப்படை_கூட்டுப்புழு,
            'கூட்டுப்புழு_ஒட்டுண்ணி': அடிப்படை_குடம்பி_ஒட்டுண்ணி,
            'குடம்பி_ஒட்டுண்ணி': அடிப்படை_கூட்டுப்பிழு_ஒட்டுண்ணி
        }
    }
    for உருவகப்படுத்துதல், விளைவு in தரவுகள்.items():
        எண்ணிக்கைகள்[உருவகப்படுத்துதல்] = {
            'குடம்பிகள்': விளைவு.loc[{EJE_ETAPA: 'அனைத்து குடம்பி'}],
            'கூட்டுப்புழுகள்': விளைவு.loc[{EJE_ETAPA: 'O. arenosella : pupa'}],
            'கூட்டுப்புழு_ஒட்டுண்ணி': விளைவு.loc[{EJE_ETAPA: 'Parasitoide pupa : adulto'}],
            'குடம்பி_ஒட்டுண்ணி': விளைவு.loc[{EJE_ETAPA: 'Parasitoide larvas : adulto'}]
        }

    for அச்சு, உருவகப்படுத்துதல் in zip(அச்சுகள், எண்ணிக்கைகள்):
        நம்பக_இடைவெளியுடன்_எண்ணிக்கையை_வரையு(அச்சு, எண்ணிக்கைகள்[உருவகப்படுத்துதல்]["குடம்பிகள்"])

        இ = range(எண்ணிக்கைகள்[உருவகப்படுத்துதல்]["குடம்பிகள்"][EJE_TIEMPO].values.shape[0])
        அச்சு.plot(இ, np.full_like(இ, பொ_சே_கோ), linestyle='dashed', color='#000000', label='பொருளாதார சேத கோடு')
        அச்சு.set_title(உருவகப்படுத்துதல், fontsize=20, fontproperties=எழுத்துரு)

    for அச்சு in அச்சுகள்:
        தமிழ்_அச்சுகள்(அச்சு)

    அச்சு_௩.set_xlabel('உருவகப்படுத்துதலின் நாள்', fontsize=17, fontproperties=எழுத்துரு)
    அச்சு_௪.set_xlabel('உருவகப்படுத்துதலின் நாள்', fontsize=17, fontproperties=எழுத்துரு)

    உருப்படம்.suptitle(
        'கருந்தலைப்புழு குடம்பியின் எண்ணிக்கை, வெவ்வேறு கட்டுபாடு உத்திகளுடன்', fontsize=25,
        fontproperties=எழுத்துரு
    )
    உருப்படம்.subplots_adjust(wspace=0.15, hspace=0.15, bottom=0.15)
    உருப்படம்.legend(*அச்சு_௧.get_legend_handles_labels(), loc='lower center', ncol=3, prop=அளவுடன்_எழுத்துரு(17))

    உருப்படம்.savefig(f'{உருப்படம்_கோப்புரை}/உருப்படம் - ௩.jpeg')
